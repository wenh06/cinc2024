name: Docker Image CI and Test

on:
  push:
    branches: [ docker-test ]
  pull_request:
    branches: [ master ]

env:
  # see the Dockerfile for the definition of some of the following environment variables
  status: alpha
  CINC2024_REVENGER_TEST: 1
  download_data_dir: ${{ github.workspace }}/download_data
  mount_data_dir: /challenge/data
  revenger_data_dir: /challenge/cache/revenger_data_dir
  revenger_model_dir: /challenge/cache/revenger_model_dir
  revenger_test_dir: /challenge/test
  revenger_output_dir: /challenge/output
  docker_main_filename: Dockerfile
  DOCKER_HUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKER_HUB_REPOSITORY: deeppsp-cinc2024-docker-image
  DOCKER_IMAGE_TAG: latest

jobs:

  build:
    if: contains(fromJson('["wenh06", "kjs11", "DeepPSP"]'), github.repository_owner)

    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    - name: Clear unnecessary system components
      run: |
        echo "Free space before cleanup:"
        df -h
        sudo rm -rf /usr/local/lib/android # will release about 10 GB if you don't need Android
        sudo rm -rf /usr/share/dotnet # will release about 20GB if you don't need .NET
        sudo rm -rf /opt/ghc
        sudo rm -rf /usr/local/share/boost
        sudo rm -rf "$AGENT_TOOLSDIRECTORY"
        echo "Free space after cleanup:"
        df -h
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        driver: docker
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build and push (optional) the Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ${{ env.docker_main_filename }}
        push: false
        # load: true
        tags: |
          ${{ env.DOCKER_HUB_USERNAME }}/${{ env.DOCKER_HUB_REPOSITORY }}:${{ env.DOCKER_IMAGE_TAG }}

    - name: Download the training_subset data
      if: ${{ env.status != 'pre' }}
      # this step is done before running the test of challenge entry
      # in the Docker image in the next step since the data directory
      # is mounted as read-only in the challenge settings
      run: |
        mkdir -p ${{ env.download_data_dir }}
        docker run \
          -e PYTHONUNBUFFERED=1 \
          -e CINC2024_REVENGER_TEST=${{ env.CINC2024_REVENGER_TEST }} \
          -e revenger_data_dir=${{ env.revenger_data_dir }} \
          -e revenger_model_dir=${{ env.revenger_model_dir }} \
          -e revenger_test_dir=${{ env.revenger_test_dir }} \
          -e revenger_output_dir=${{ env.revenger_output_dir }} \
          -e mount_data_dir=${{ env.mount_data_dir }} \
          -v ${{ env.download_data_dir }}:${{ env.mount_data_dir }} \
          ${{ env.DOCKER_HUB_USERNAME }}/${{ env.DOCKER_HUB_REPOSITORY }}:${{ env.DOCKER_IMAGE_TAG }} \
          bash -c "python data_reader.py download_subset_tiny download_synthetic_images --db-dir ${{ env.mount_data_dir }}"
        docker ps -a
        docker stop $(docker ps -a -q)

    - name: Run the Docker image
      # NOTE: mount env.download_data_dir to env.mount_data_dir
      # and set it read-only as in the CinC2024 challenge settings.
      # Also, the docker image is run without any internet access.
      if: ${{ env.status != 'pre' }}
      run: |
        docker run \
          -e PYTHONUNBUFFERED=1 \
          -e CINC2024_REVENGER_TEST=${{ env.CINC2024_REVENGER_TEST }} \
          -e revenger_data_dir=${{ env.revenger_data_dir }} \
          -e revenger_model_dir=${{ env.revenger_model_dir }} \
          -e revenger_test_dir=${{ env.revenger_test_dir }} \
          -e revenger_output_dir=${{ env.revenger_output_dir }} \
          -e mount_data_dir=${{ env.mount_data_dir }} \
          -v ${{ env.download_data_dir }}:${{ env.mount_data_dir }}:ro \
          --network none \
          ${{ env.DOCKER_HUB_USERNAME }}/${{ env.DOCKER_HUB_REPOSITORY }}:${{ env.DOCKER_IMAGE_TAG }} \
          bash -c "bash test_run_challenge.sh"
        docker ps -a
        docker stop $(docker ps -a -q)
